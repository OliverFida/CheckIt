{"ast":null,"code":"var _jsxFileName = \"/home/oliver/Desktop/awl-raumreservierung/frontend/src/pages/components/Stundenplan.js\",\n    _s = $RefreshSig$();\n\n// Component imports\nimport React, { useState, useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport timesMap from '../../api/timesMap.json';\nimport moment from 'moment'; // API imports\n\nimport BookingsAPI from '../../api/bookings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Stundenplan() {\n  _s();\n\n  const [tableHeadElements, setTableHeadElements] = useState([]);\n  const [bookings, setBookings] = useState([]);\n  const [tableBodyElements, setTableBodyElements] = useState([]);\n  useEffect(() => {\n    generateTableHead();\n    getBookings();\n  }, []);\n  useEffect(() => {\n    generateTableBody();\n  }, [bookings]);\n\n  function getBookings() {\n    setBookings(BookingsAPI.getBookings(null));\n  }\n\n  function generateTableHead() {\n    // OFDO: Umbau auf Moment\n    var weekOffset = 0;\n    var dateToday = moment();\n    dateToday.add(weekOffset, 'weeks');\n    var dateMonday = moment().isoWeekday(-7);\n    console.log(dateMonday); // var weekOffset = 0;\n    // var dateToday = new Date();\n    // dateToday.setDate(dateToday.getDate() + (7 * weekOffset));\n    // var weekDayToday = dateToday.getDay();\n    // var dateMonday = new Date(dateToday);\n    // dateMonday.setDate(dateToday.getDate() - (weekDayToday - 1));\n    // var newTableHead = [];\n    // newTableHead.push(<th key=\"th0\"></th>);\n    // for(var i = 0; i < 5; i++){            \n    //     var useDate = new Date(dateMonday);\n    //     useDate.setDate(useDate.getDate() + i);\n    //     newTableHead.push(<th key={`th${i + 1}`}>{useDate.getDate()}.{useDate.getMonth() + 1}.{useDate.getFullYear()}</th>);\n    // }\n    // setTableHeadElements(newTableHead);\n  }\n\n  function generateTableBody() {\n    var newTableBody = [];\n    timesMap.forEach(lesson => {\n      newTableBody.push(generateRow(lesson));\n    });\n    setTableBodyElements(newTableBody);\n  }\n\n  function generateRow(lesson) {\n    var tempData = [];\n\n    if (lesson.key === \"break\") {\n      tempData.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Pause\"\n      }, \"title\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 27\n      }, this));\n    } else {\n      tempData.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"Stunde \", lesson.key]\n      }, \"title\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }, this));\n    }\n\n    for (var day = 1; day <= 5; day++) {\n      if (lesson.key !== \"break\") {\n        tempData.push(generateBooking(day, lesson));\n      } else {\n        tempData.push( /*#__PURE__*/_jsxDEV(\"td\", {}, `break_${day}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 31\n        }, this));\n      }\n    }\n\n    var tempRow = /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: tempData\n    }, lesson.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }, this);\n\n    return tempRow;\n  }\n\n  function generateBooking(day, lesson) {\n    var targetDateFrom = new Date();\n    targetDateFrom.setDate(targetDateFrom.getDate() + (0 - targetDateFrom.getDay()) + day);\n    var targetHourFrom = lesson.start.substring(0, 2);\n    var targetMinuteFrom = lesson.start.substring(3, 5);\n    targetDateFrom.setHours(parseInt(targetHourFrom));\n    targetDateFrom.setMinutes(parseInt(targetMinuteFrom));\n    targetDateFrom.setSeconds(0);\n    targetDateFrom.setMilliseconds(0);\n    var foundBooking = bookings.find(booking => booking.startTime === targetDateFrom.toJSON());\n    if (foundBooking) return /*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"Gebucht\"\n    }, `booking_${day}_${lesson.key}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"-\"\n    }, `booking_${day}_${lesson.key}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: tableHeadElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: tableBodyElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Stundenplan, \"Jk275whVlM2B73u4nWv5aBRgy6k=\");\n\n_c = Stundenplan;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stundenplan\");","map":{"version":3,"names":["React","useState","useEffect","Table","timesMap","moment","BookingsAPI","Stundenplan","tableHeadElements","setTableHeadElements","bookings","setBookings","tableBodyElements","setTableBodyElements","generateTableHead","getBookings","generateTableBody","weekOffset","dateToday","add","dateMonday","isoWeekday","console","log","newTableBody","forEach","lesson","push","generateRow","tempData","key","day","generateBooking","tempRow","targetDateFrom","Date","setDate","getDate","getDay","targetHourFrom","start","substring","targetMinuteFrom","setHours","parseInt","setMinutes","setSeconds","setMilliseconds","foundBooking","find","booking","startTime","toJSON"],"sources":["/home/oliver/Desktop/awl-raumreservierung/frontend/src/pages/components/Stundenplan.js"],"sourcesContent":["// Component imports\nimport React, {useState, useEffect} from 'react';\nimport {Table} from 'react-bootstrap';\nimport timesMap from '../../api/timesMap.json';\nimport moment from 'moment';\n// API imports\nimport BookingsAPI from '../../api/bookings';\n\nexport default function Stundenplan(){\n    const [tableHeadElements, setTableHeadElements] = useState([]);\n    const [bookings, setBookings] = useState([]);\n    const [tableBodyElements, setTableBodyElements] = useState([]);\n    \n    useEffect(() => {\n        generateTableHead();\n        getBookings();\n    }, []);\n\n    useEffect(() => {\n        generateTableBody();\n    }, [bookings]);\n\n    function getBookings(){\n        setBookings(BookingsAPI.getBookings(null));\n    }\n\n    function generateTableHead(){\n        // OFDO: Umbau auf Moment\n        var weekOffset = 0;\n        var dateToday = moment();\n        dateToday.add(weekOffset, 'weeks');\n\n        var dateMonday = moment().isoWeekday(-7);\n        console.log(dateMonday);\n        \n        // var weekOffset = 0;\n        // var dateToday = new Date();\n        // dateToday.setDate(dateToday.getDate() + (7 * weekOffset));\n        \n        // var weekDayToday = dateToday.getDay();\n        // var dateMonday = new Date(dateToday);\n        // dateMonday.setDate(dateToday.getDate() - (weekDayToday - 1));\n\n        // var newTableHead = [];\n        // newTableHead.push(<th key=\"th0\"></th>);\n        // for(var i = 0; i < 5; i++){            \n        //     var useDate = new Date(dateMonday);\n        //     useDate.setDate(useDate.getDate() + i);\n        //     newTableHead.push(<th key={`th${i + 1}`}>{useDate.getDate()}.{useDate.getMonth() + 1}.{useDate.getFullYear()}</th>);\n        // }\n        // setTableHeadElements(newTableHead);\n    }\n\n    function generateTableBody(){\n        var newTableBody = [];\n\n        timesMap.forEach(lesson => {\n            newTableBody.push(generateRow(lesson));\n        });\n\n        setTableBodyElements(newTableBody);\n    }\n\n    function generateRow(lesson){\n        var tempData = [];\n\n        if(lesson.key === \"break\"){\n            tempData.push(<td key=\"title\">Pause</td>);\n        }else{\n            tempData.push(<td key=\"title\">Stunde {lesson.key}</td>);\n        }\n\n        for(var day = 1; day <= 5; day++){\n            if(lesson.key !== \"break\"){\n                tempData.push(generateBooking(day, lesson));\n            }else{\n                tempData.push(<td key={`break_${day}`}></td>);\n            }\n        }\n\n        var tempRow = <tr key={lesson.key}>{tempData}</tr>;\n\n        return tempRow;\n    }\n\n    function generateBooking(day, lesson){\n        var targetDateFrom = new Date();\n        targetDateFrom.setDate(targetDateFrom.getDate() + (0 - targetDateFrom.getDay()) + day);\n        \n        var targetHourFrom = lesson.start.substring(0, 2);\n        var targetMinuteFrom = lesson.start.substring(3, 5);\n\n        targetDateFrom.setHours(parseInt(targetHourFrom));\n        targetDateFrom.setMinutes(parseInt(targetMinuteFrom));\n        targetDateFrom.setSeconds(0);\n        targetDateFrom.setMilliseconds(0);\n        \n        var foundBooking = bookings.find(booking => booking.startTime === targetDateFrom.toJSON());\n        \n        if(foundBooking) return <td key={`booking_${day}_${lesson.key}`}>Gebucht</td>;\n        return <td key={`booking_${day}_${lesson.key}`}>-</td>;\n    }\n\n    return(\n        <Table>\n            <thead>\n                <tr>\n                    {tableHeadElements}\n                </tr>\n            </thead>\n            <tbody>\n                {tableBodyElements}\n            </tbody>\n        </Table>\n    );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}