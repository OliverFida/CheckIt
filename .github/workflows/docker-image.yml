name: Docker Image CI

on:
  workflow_dispatch:


env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME_BACKEND: oliverfida/checkit_backend
  IMAGE_NAME_FRONTEND: oliverfida/checkit_frontend

jobs:

  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: backend
    - name: Build
      run: dotnet build -c release --no-restore
      working-directory: backend
        
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta_backend
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/checkit_backend

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: backend
        push: true
        tags: ${{ steps.meta_backend.outputs.tags }}
        labels: ${{ steps.meta_backend.outputs.labels }}
        
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    - run: npm ci
      working-directory: frontend

    - run: npm run build --if-present
      working-directory: frontend
      env:
        CI: false
      
    - name: Extract metadata (tags, labels) for Docker
      id: meta_frontend
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/checkit_frontend

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: frontend
        push: true
        tags: ${{ steps.meta_frontend.outputs.tags }}
        labels: ${{ steps.meta_frontend.outputs.labels }}
    
